<Project Sdk="Microsoft.NET.Sdk">

	<PropertyGroup>
		<TargetFrameworks Condition="$([MSBuild]::IsOSPlatform('windows'))">net8.0-windows10.0.19041.0</TargetFrameworks>
        <TargetFrameworks Condition="$([MSBuild]::IsOSPlatform('ios'))">net8.0-ios</TargetFrameworks>
        <TargetFrameworks Condition="$([MSBuild]::IsOSPlatform('android'))">net8.0-android</TargetFrameworks>
        <TargetFrameworks Condition="$([MSBuild]::IsOSPlatform('maccatalyst'))">net8.0-maccatalyst</TargetFrameworks>
 
		<!-- Note for MacCatalyst:
			The default runtime is maccatalyst-x64, except in Release config, in which case the default is maccatalyst-x64;maccatalyst-arm64.
			When specifying both architectures, use the plural <RuntimeIdentifiers> instead of the singular <RuntimeIdentifier>.
			The Mac App Store will NOT accept apps with ONLY maccatalyst-arm64 indicated;
			either BOTH runtimes must be indicated or ONLY macatalyst-x64. -->
			<!-- For example: <RuntimeIdentifiers>maccatalyst-x64;maccatalyst-arm64</RuntimeIdentifiers> -->

		<OutputType>Exe</OutputType>
		<SingleProject>true</SingleProject>
		<UseMaui>true</UseMaui>
		<RootNamespace>CSimple</RootNamespace>
		<ApplicationTitle>CSimple</ApplicationTitle>
		<ApplicationId>com.companyname.CSimple</ApplicationId>
		<EnablePreviewMsixTooling>true</EnablePreviewMsixTooling>
		<SingleProject>true</SingleProject>
		<ApplicationVersion>1</ApplicationVersion>

		<!-- (Optional) Pin to a specific version -->
		<!--<MauiVersion>6.0.101-preview.11.2349</MauiVersion>-->

		<!-- Required for C# Hot Reload -->
		<UseInterpreter Condition="'$(Configuration)' == 'Debug'">True</UseInterpreter>

		<SupportedOSPlatformVersion Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'ios'">11.0</SupportedOSPlatformVersion>
		<SupportedOSPlatformVersion Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'maccatalyst'">13.1</SupportedOSPlatformVersion>
		<SupportedOSPlatformVersion Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'android'">21.0</SupportedOSPlatformVersion>
		<SupportedOSPlatformVersion Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'windows'">10.0.19041.0</SupportedOSPlatformVersion>
		<TargetPlatformMinVersion Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'windows'">10.0.19041.0</TargetPlatformMinVersion>
		<SupportedOSPlatformVersion Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'tizen'">6.5</SupportedOSPlatformVersion>
		<GenerateAppInstallerFile>True</GenerateAppInstallerFile>
		<AppxPackageSigningEnabled>True</AppxPackageSigningEnabled>
		<AppxPackageSigningTimestampDigestAlgorithm>SHA256</AppxPackageSigningTimestampDigestAlgorithm>
		<AppxAutoIncrementPackageRevision>True</AppxAutoIncrementPackageRevision>
		<AppxSymbolPackageEnabled>True</AppxSymbolPackageEnabled>
		<GenerateTestArtifacts>True</GenerateTestArtifacts>
		<AppInstallerUri>C:/</AppInstallerUri>
		<HoursBetweenUpdateChecks>0</HoursBetweenUpdateChecks>
		<PackageCertificateThumbprint>39B784A81F8FBE9F28001256E91D7B34DDFF6F20</PackageCertificateThumbprint>

	</PropertyGroup>

	<!-- To generate MSIX as part of dotnet publish -->
	<PropertyGroup Condition="$(TargetFramework.Contains('-windows')) and '$(Configuration)' == 'Release'">
		<GenerateAppxPackageOnBuild>true</GenerateAppxPackageOnBuild>
		<!-- <AppxPackageSigningEnabled>true</AppxPackageSigningEnabled> -->
	</PropertyGroup>

	<!-- For iOS publish-->
	<PropertyGroup Condition="$(TargetFramework.Contains('-ios')) and '$(Configuration)' == 'Release'">
		<RuntimeIdentifier>ios-arm64</RuntimeIdentifier>
		<!-- <CodesignKey>iPhone Distribution: John Smith (AY2GDE9QM7)</CodesignKey>
		<CodesignProvision>MyMauiApp</CodesignProvision> -->
		<ArchiveOnBuild>true</ArchiveOnBuild>
	</PropertyGroup>
	<ItemGroup>
		<MauiIcon Include="Resources\appicon.svg" ForegroundFile="Resources\appiconfg.svg" Color="#081B25" />
		<MauiSplashScreen Include="Resources\appiconfg.svg" Color="#081B25" />
		<MauiImage Include="Resources\Images\*" />
		<MauiFont Include="Resources\Fonts\*" />
		<MauiAsset Include="Resources\Raw\**" LogicalName="%(RecursiveDir)%(Filename)%(Extension)" />
	</ItemGroup>

	<ItemGroup Condition="$(TargetFramework.Contains('-windows'))">
		<PackageReference Include="Microsoft.Toolkit.Uwp.Notifications" Version="7.0.1" />
		<PackageReference Include="PInvoke.User32" Version="0.7.104" />
	</ItemGroup>

	<ItemGroup>
	  <None Remove="Platforms\Windows\trayicon.ico" />
	  <None Remove="Platforms\MacCatalyst\trayicon.png" />
	</ItemGroup>

	<ItemGroup>
	  <Content Include="Platforms\Windows\trayicon.ico">
	    <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
	  </Content>
	  <Content Include="Platforms\MacCatalyst\trayicon.png">
	    <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
	  </Content>
	</ItemGroup>

  <ItemGroup>
		<PackageReference Include="Microsoft.Maui.Controls" Version="$(MauiVersion)" />
		<PackageReference Include="Microsoft.Maui.Controls.Compatibility" Version="$(MauiVersion)" />
		<PackageReference Include="Microsoft.Extensions.Logging.Debug" Version="8.0.0" />
		<PackageReference Include="NAudio" Version="2.2.1" />
		<PackageReference Include="Newtonsoft.Json" Version="13.0.3" />
		<PackageReference Include="OpenCvSharp4" Version="4.10.0.20240616" />
		<PackageReference Include="OpenCvSharp4.runtime.win" Version="4.10.0.20240616" />
		<PackageReference Include="SharpDX" Version="4.2.0" />
		<PackageReference Include="SharpDX.Direct3D11" Version="4.2.0" />
		<PackageReference Include="SharpDX.DXGI" Version="4.2.0" />
		<PackageReference Include="System.Net.Http.Json" Version="8.0.0" />
		<PackageReference Include="WindowsInput" Version="6.4.1" />
	</ItemGroup>

   <ProjectExtensions><VisualStudio><UserProperties XamarinHotReloadGenericExceptionInfoBarCSimpleHideInfoBar="True" /></VisualStudio></ProjectExtensions>

</Project>
