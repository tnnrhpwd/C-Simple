<ContentPage xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:viewmodels="clr-namespace:CSimple.ViewModels"
             xmlns:models="clr-namespace:CSimple.Models"
             xmlns:local="clr-namespace:CSimple.Pages"
             xmlns:converters="clr-namespace:CSimple.Converters"
             x:DataType="viewmodels:OrientPageViewModel"
             x:Class="CSimple.Pages.OrientPage"
             Title="Orient - Pipeline Editor">
    <ContentPage.Resources>
        <converters:IsNotNullConverter x:Key="IsNotNullConverter" />
        <converters:InverseBoolConverter x:Key="InverseBoolConverter" />
    </ContentPage.Resources>
    <Grid RowDefinitions="Auto, *">
        <!-- Top Toolbar (Row 0) -->
        <Border Grid.Row="0"
                StrokeThickness="0"
                BackgroundColor="{AppThemeBinding Light=#E0FFFFFF, Dark=#E0333333}"
                Padding="5,5"
                Margin="5,5,5,0"
                VerticalOptions="Start"
                HorizontalOptions="FillAndExpand"
                StrokeShape="RoundRectangle 8">
            <!-- Use FlexLayout for wrapping -->
            <FlexLayout Wrap="Wrap"
                        AlignItems="Center"
                        JustifyContent="Start">
                <!-- Pipeline Management -->
                <Label Text="Pipeline:"
                       VerticalOptions="Center"
                       FontAttributes="Bold"
                       Margin="5,0"
                       TextColor="{AppThemeBinding Light=Black, Dark=White}" />
                <Picker Title="Select Pipeline"
                        ItemsSource="{Binding AvailablePipelineNames}"
                        SelectedItem="{Binding SelectedPipelineName, Mode=TwoWay}"
                        WidthRequest="180"
                        Margin="0,0,5,0"
                        VerticalOptions="Center"
                        BackgroundColor="{AppThemeBinding Light=White, Dark=Gray}"
                        TextColor="{AppThemeBinding Light=Black, Dark=White}" />
                <Button Command="{Binding CreateNewPipelineCommand}"
                        Text="New"
                        BackgroundColor="{StaticResource Tertiary}"
                        TextColor="White"
                        CornerRadius="5"
                        Padding="8,4"
                        Margin="2"
                        FontSize="12"
                        HeightRequest="30"
                        ToolTipProperties.Text="Create New Pipeline" />
                <Button Command="{Binding RenamePipelineCommand}"
                        Text="Rename"
                        IsEnabled="{Binding SelectedPipelineName, Converter={StaticResource IsNotNullConverter}}"
                        BackgroundColor="{StaticResource Secondary}"
                        TextColor="White"
                        CornerRadius="5"
                        Padding="8,4"
                        Margin="2"
                        FontSize="12"
                        HeightRequest="30"
                        ToolTipProperties.Text="Rename Selected Pipeline" />
                <Button Command="{Binding DeletePipelineCommand}"
                        Text="Delete Pipeline"
                        IsEnabled="{Binding SelectedPipelineName, Converter={StaticResource IsNotNullConverter}}"
                        BackgroundColor="{StaticResource Error}"
                        TextColor="White"
                        CornerRadius="5"
                        Padding="8,4"
                        Margin="2"
                        FontSize="12"
                        HeightRequest="30"
                        ToolTipProperties.Text="Delete Selected Pipeline" />
                <!-- Separator -->
                <BoxView BackgroundColor="{AppThemeBinding Light=LightGray, Dark=Gray}"
                         WidthRequest="1"
                         HeightRequest="25"
                         Margin="10,0"
                         VerticalOptions="Center" />
                <!-- Add Model -->
                <Label Text="Add Model:"
                       VerticalOptions="Center"
                       FontAttributes="Bold"
                       Margin="5,0"
                       TextColor="{AppThemeBinding Light=Black, Dark=White}" />
                <Picker Title="Select Model Type"
                        ItemsSource="{Binding AvailableModels}"
                        ItemDisplayBinding="{Binding Name}"
                        x:Name="ModelPicker"
                        WidthRequest="180"
                        Margin="0,0,5,0"
                        VerticalOptions="Center"
                        BackgroundColor="{AppThemeBinding Light=White, Dark=Gray}"
                        TextColor="{AppThemeBinding Light=Black, Dark=White}" />
                <Button Command="{Binding AddModelNodeCommand}"
                        CommandParameter="{Binding Source={x:Reference ModelPicker}, Path=SelectedItem}"
                        BackgroundColor="{StaticResource Primary}"
                        Text="Add Node"
                        TextColor="White"
                        CornerRadius="5"
                        Padding="8,4"
                        Margin="2"
                        FontSize="12"
                        HeightRequest="30"
                        ToolTipProperties.Text="Add Selected Model Node" />
                <!-- Delete Node -->
                <Button Command="{Binding DeleteSelectedNodeCommand}"
                        BackgroundColor="{StaticResource Error}"
                        Text="Delete Node"
                        IsEnabled="{Binding SelectedNode, Converter={StaticResource IsNotNullConverter}}"
                        TextColor="White"
                        CornerRadius="5"
                        Padding="8,4"
                        Margin="2"
                        FontSize="12"
                        HeightRequest="30"
                        ToolTipProperties.Text="Delete Selected Node" />
            </FlexLayout>
        </Border>
        <!-- GraphicsView for drawing nodes and connections (Row 1) -->
        <GraphicsView Grid.Row="1"
                      x:Name="NodeCanvas"
                      Drawable="{Binding Source={RelativeSource AncestorType={x:Type local:OrientPage}}, Path=NodeDrawable}"
                      StartInteraction="OnCanvasStartInteraction"
                      DragInteraction="OnCanvasDragInteraction"
                      EndInteraction="OnCanvasEndInteraction"
                      CancelInteraction="OnCanvasCancelInteraction"
                      BackgroundColor="{AppThemeBinding Light=WhiteSmoke, Dark=#1e1e1e}" />
        <!-- Selected Node Info Panel (Overlay in Row 1) -->
        <Border Grid.Row="1"
                Stroke="{AppThemeBinding Light=Gray, Dark=LightGray}"
                BackgroundColor="{AppThemeBinding Light=#F0FFFFFF, Dark=#F0444444}"
                Padding="10"
                Margin="10"
                VerticalOptions="End"
                HorizontalOptions="Start"
                StrokeShape="RoundRectangle 8"
                IsVisible="{Binding SelectedNode, Converter={StaticResource IsNotNullConverter}}"
                WidthRequest="200">
            <VerticalStackLayout Spacing="4">
                <Label Text="Selected Node"
                       FontSize="12"
                       FontAttributes="Bold"
                       TextColor="{AppThemeBinding Light=Black, Dark=WhiteSmoke}" />
                <Label Text="{Binding SelectedNode.Name}"
                       FontSize="14"
                       LineBreakMode="TailTruncation"
                       TextColor="{AppThemeBinding Light=Black, Dark=WhiteSmoke}" />
                <Label Text="{Binding SelectedNode.Type, StringFormat='Type: {0}'}"
                       FontSize="10"
                       TextColor="{AppThemeBinding Light=DarkSlateGray, Dark=LightGray}" />
                <!-- Add more details here if needed -->
            </VerticalStackLayout>
        </Border>
    </Grid>
</ContentPage>