<ContentPage xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:viewmodels="clr-namespace:CSimple.ViewModels"
             xmlns:models="clr-namespace:CSimple.Models"
             xmlns:local="clr-namespace:CSimple.Pages"
             xmlns:converters="clr-namespace:CSimple.Converters"
             x:DataType="viewmodels:OrientPageViewModel"
             x:Class="CSimple.Pages.OrientPage"
             Title="Orient - Pipeline Editor">
    <ContentPage.Resources>
        <converters:IsNotNullConverter x:Key="IsNotNullConverter" />
        <converters:InverseBoolConverter x:Key="InverseBoolConverter" />
        <!-- ... existing resources ... -->
        <Style x:Key="ThemedPickerStyle"
               TargetType="Picker">
            <!-- ... existing style setters ... -->
        </Style>
        <Style x:Key="SmallLabelStyle"
               TargetType="Label">
            <Setter Property="FontSize"
                    Value="10" />
            <Setter Property="TextColor"
                    Value="{AppThemeBinding Light={StaticResource TextSecondaryLight}, Dark={StaticResource TextSecondaryDark}}" />
            <Setter Property="Margin"
                    Value="0,5,0,0" />
        </Style>
    </ContentPage.Resources>
    <Grid RowDefinitions="Auto, *">
        <!-- Top Toolbar (Row 0) -->
        <Border Grid.Row="0"
                StrokeThickness="0"
                BackgroundColor="{AppThemeBinding 
&#xA;&#xA;                    Light={StaticResource SurfaceBackgroundLight},
&#xA;&#xA;                    Dark={StaticResource SurfaceBackgroundDark}}"
                Padding="5,5"
                Margin="5,5,5,0"
                VerticalOptions="Start"
                HorizontalOptions="FillAndExpand"
                StrokeShape="RoundRectangle 8">
            <!-- Use FlexLayout for wrapping -->
            <FlexLayout Wrap="Wrap"
                        AlignItems="Center"
                        JustifyContent="Start">
                <!-- Pipeline Management -->
                <Label Text="Pipeline:"
                       VerticalOptions="Center"
                       FontAttributes="Bold"
                       Margin="5,0"
                       TextColor="{AppThemeBinding 
&#xA;&#xA;                           Light={StaticResource TextPrimaryLight}, 
&#xA;&#xA;                           Dark={StaticResource TextPrimaryDark}}" />
                <Picker Title="Select Pipeline"
                        ItemsSource="{Binding AvailablePipelineNames}"
                        SelectedItem="{Binding SelectedPipelineName, Mode=TwoWay}"
                        Style="{StaticResource ThemedPickerStyle}" />
                <Button Command="{Binding CreateNewPipelineCommand}"
                        Text="New"
                        BackgroundColor="{StaticResource Tertiary}"
                        TextColor="{AppThemeBinding 
&#xA;&#xA;                            Light={StaticResource TextOnPrimary}, 
&#xA;&#xA;                            Dark={StaticResource TextOnPrimary}}"
                        CornerRadius="5"
                        Padding="8,4"
                        Margin="2"
                        FontSize="12"
                        HeightRequest="30"
                        ToolTipProperties.Text="Create New Pipeline" />
                <Button Command="{Binding RenamePipelineCommand}"
                        Text="Rename"
                        IsEnabled="{Binding SelectedPipelineName, Converter={StaticResource IsNotNullConverter}}"
                        BackgroundColor="{StaticResource Secondary}"
                        TextColor="{AppThemeBinding 
&#xA;&#xA;                            Light={StaticResource TextOnPrimary}, 
&#xA;&#xA;                            Dark={StaticResource TextOnPrimary}}"
                        CornerRadius="5"
                        Padding="8,4"
                        Margin="2"
                        FontSize="12"
                        HeightRequest="30"
                        ToolTipProperties.Text="Rename Selected Pipeline" />
                <Button Command="{Binding DeletePipelineCommand}"
                        Text="Delete Pipeline"
                        IsEnabled="{Binding SelectedPipelineName, Converter={StaticResource IsNotNullConverter}}"
                        BackgroundColor="{StaticResource Error}"
                        TextColor="{AppThemeBinding 
&#xA;&#xA;                            Light={StaticResource TextOnPrimary}, 
&#xA;&#xA;                            Dark={StaticResource TextOnPrimary}}"
                        CornerRadius="5"
                        Padding="8,4"
                        Margin="2"
                        FontSize="12"
                        HeightRequest="30"
                        ToolTipProperties.Text="Delete Selected Pipeline" />
                <!-- Separator -->
                <BoxView BackgroundColor="{AppThemeBinding 
&#xA;&#xA;                             Light={StaticResource BorderColor},
&#xA;&#xA;                             Dark={StaticResource NeutralDark}}"
                         WidthRequest="1"
                         HeightRequest="25"
                         Margin="10,0"
                         VerticalOptions="Center" />
                <!-- Add Model -->
                <Label Text="Add Model:"
                       VerticalOptions="Center"
                       FontAttributes="Bold"
                       Margin="5,0"
                       TextColor="{AppThemeBinding 
&#xA;&#xA;                           Light={StaticResource TextPrimaryLight}, 
&#xA;&#xA;                           Dark={StaticResource TextPrimaryDark}}" />
                <Picker Title="Select Model Type"
                        ItemsSource="{Binding AvailableModels}"
                        ItemDisplayBinding="{Binding Name}"
                        x:Name="ModelPicker"
                        Style="{StaticResource ThemedPickerStyle}" />
                <Button Command="{Binding AddModelNodeCommand}"
                        CommandParameter="{Binding Source={x:Reference ModelPicker}, Path=SelectedItem}"
                        BackgroundColor="{StaticResource Primary}"
                        Text="Add Node"
                        TextColor="{AppThemeBinding 
&#xA;&#xA;                            Light={StaticResource TextOnPrimary}, 
&#xA;&#xA;                            Dark={StaticResource TextOnPrimary}}"
                        CornerRadius="5"
                        Padding="8,4"
                        Margin="2"
                        FontSize="12"
                        HeightRequest="30"
                        ToolTipProperties.Text="Add Selected Model Node" />
                <!-- Delete Node -->
                <Button Command="{Binding DeleteSelectedNodeCommand}"
                        BackgroundColor="{StaticResource Error}"
                        Text="Delete Node"
                        IsEnabled="{Binding SelectedNode, Converter={StaticResource IsNotNullConverter}}"
                        TextColor="{AppThemeBinding 
&#xA;&#xA;                            Light={StaticResource TextOnPrimary}, 
&#xA;&#xA;                            Dark={StaticResource TextOnPrimary}}"
                        CornerRadius="5"
                        Padding="8,4"
                        Margin="2"
                        FontSize="12"
                        HeightRequest="30"
                        ToolTipProperties.Text="Delete Selected Node" />
            </FlexLayout>
        </Border>
        <!-- GraphicsView for drawing nodes and connections (Row 1) -->
        <GraphicsView Grid.Row="1"
                      x:Name="NodeCanvas"
                      Drawable="{Binding Source={RelativeSource AncestorType={x:Type local:OrientPage}}, Path=NodeDrawable}"
                      StartInteraction="OnCanvasStartInteraction"
                      DragInteraction="OnCanvasDragInteraction"
                      EndInteraction="OnCanvasEndInteraction"
                      CancelInteraction="OnCanvasCancelInteraction"
                      BackgroundColor="{AppThemeBinding 
&#xA;&#xA;                          Light={StaticResource BackgroundLight}, 
&#xA;&#xA;                          Dark={StaticResource BackgroundDark}}" />
        <!-- Selected Node Info Panel (Overlay in Row 1) -->
        <Border Grid.Row="1"
                Stroke="{AppThemeBinding 
&#xA;&#xA;                    Light={StaticResource BorderColor}, 
&#xA;&#xA;                    Dark={StaticResource NeutralDark}}"
                BackgroundColor="{AppThemeBinding 
&#xA;&#xA;                    Light={StaticResource CardBackgroundLight}, 
&#xA;&#xA;                    Dark={StaticResource CardBackgroundDark}}"
                Opacity="0.9"
                Padding="10"
                Margin="10"
                VerticalOptions="End"
                HorizontalOptions="Start"
                StrokeShape="RoundRectangle 8"
                IsVisible="{Binding SelectedNode, Converter={StaticResource IsNotNullConverter}}"
                WidthRequest="200">
            <VerticalStackLayout Spacing="4">
                <Label Text="Selected Node"
                       FontSize="12"
                       FontAttributes="Bold"
                       TextColor="{AppThemeBinding 
&#xA;&#xA;                           Light={StaticResource TextPrimaryLight}, 
&#xA;&#xA;                           Dark={StaticResource TextPrimaryDark}}" />
                <Label Text="{Binding SelectedNode.Name}"
                       FontSize="14"
                       LineBreakMode="TailTruncation"
                       TextColor="{AppThemeBinding 
&#xA;&#xA;                           Light={StaticResource TextPrimaryLight}, 
&#xA;&#xA;                           Dark={StaticResource TextPrimaryDark}}" />
                <Label Text="{Binding SelectedNode.Type, StringFormat='Type: {0}'}"
                       FontSize="10"
                       TextColor="{AppThemeBinding 
&#xA;&#xA;                           Light={StaticResource TextSecondaryLight}, 
&#xA;&#xA;                           Dark={StaticResource TextSecondaryDark}}" />
                <Label Text="{Binding SelectedNode.DataType, StringFormat='Data Type: {0}'}"
                       FontSize="10"
                       TextColor="{AppThemeBinding 
&#xA;&#xA;                           Light={StaticResource TextSecondaryLight}, 
&#xA;&#xA;                           Dark={StaticResource TextSecondaryDark}}" />
                <!-- ADDED: Ensemble Method Picker for Models -->
                <StackLayout IsVisible="{Binding SelectedNode.IsModel}">
                    <Label Text="Ensemble Method:"
                           Style="{StaticResource SmallLabelStyle}" />
                    <Picker ItemsSource="{Binding SelectedNode.AvailableEnsembleMethods}"
                            SelectedItem="{Binding SelectedNode.SelectedEnsembleMethod}"
                            Style="{StaticResource ThemedPickerStyle}"
                            Title="Select Method"
                            HorizontalOptions="FillAndExpand"
                            Margin="0,0,0,5"
                            FontSize="12" />
                </StackLayout>
                <!-- ADDED: Classification picker for text models -->
                <StackLayout IsVisible="{Binding SelectedNode.IsTextModel}">
                    <Label Text="Classification:"
                           Style="{StaticResource SmallLabelStyle}" />
                    <Picker ItemsSource="{Binding TextModelClassifications}"
                            SelectedItem="{Binding SelectedClassification}"
                            Style="{StaticResource ThemedPickerStyle}"
                            Title="Select Classification"
                            HorizontalOptions="FillAndExpand"
                            Margin="0,0,0,5"
                            FontSize="12" />
                </StackLayout>
                <!-- Add more details here if needed -->
                <!-- ADDED: Run Node Button and Output Area -->
                <Button Text="Run Node"
                        BackgroundColor="{StaticResource Primary}"
                        TextColor="{AppThemeBinding 
&#xA;                            Light={StaticResource TextOnPrimary}, 
&#xA;                            Dark={StaticResource TextOnPrimary}}"
                        CornerRadius="5"
                        Padding="8,4"
                        Margin="0,10,0,5"
                        FontSize="12"
                        HeightRequest="30"
                        Clicked="OnRunNodeClicked"
                        ToolTipProperties.Text="Execute this node individually" />
                <Label Text="Output:"
                       IsVisible="{Binding NodeOutputText, Converter={StaticResource IsNotNullConverter}}"
                       Style="{StaticResource SmallLabelStyle}" />
                <Border Stroke="{AppThemeBinding 
&#xA;                        Light={StaticResource BorderColor}, 
&#xA;                        Dark={StaticResource NeutralDark}}"
                        StrokeThickness="1"
                        BackgroundColor="{AppThemeBinding 
&#xA;                            Light={StaticResource SurfaceBackgroundLight}, 
&#xA;                            Dark={StaticResource SurfaceBackgroundDark}}"
                        Padding="5"
                        Margin="0,0,0,5"
                        StrokeShape="RoundRectangle 4"
                        IsVisible="{Binding NodeOutputText, Converter={StaticResource IsNotNullConverter}}"
                        MinimumHeightRequest="60">
                    <ScrollView Orientation="Vertical">
                        <Label Text="{Binding NodeOutputText}"
                               FontSize="10"
                               LineBreakMode="WordWrap"
                               TextColor="{AppThemeBinding 
&#xA;                                   Light={StaticResource TextPrimaryLight}, 
&#xA;                                   Dark={StaticResource TextPrimaryDark}}" />
                    </ScrollView>
                </Border>
            </VerticalStackLayout>
        </Border>
    </Grid>
</ContentPage>