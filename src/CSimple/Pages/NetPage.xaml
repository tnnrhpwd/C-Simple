<ContentPage xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:local="clr-namespace:CSimple.Pages"
             xmlns:viewmodels="clr-namespace:CSimple.ViewModels"
             xmlns:models="clr-namespace:CSimple.Models"
             xmlns:behaviors="clr-namespace:CSimple.Behaviors"
             xmlns:converters="clr-namespace:CSimple.Converters"
             x:DataType="viewmodels:NetPageViewModel"
             x:Class="CSimple.Pages.NetPage"
             Title="Net">
    <ContentPage.Resources>
        <converters:NullToBoolConverter x:Key="NullToBoolConverter" />
        <converters:StringFormatConverter x:Key="StringFormatConverter" />
        <converters:BoolConverter x:Key="BoolConverter" />
        <converters:InverseBoolConverter x:Key="InverseBoolConverter" />
        <converters:ModelDownloadButtonTextConverter x:Key="ModelDownloadButtonTextConverter" />
        <converters:ModelInputTypeDisplayConverter x:Key="ModelInputTypeDisplayConverter" />
        <converters:EnumToDisplayStringConverter x:Key="EnumToDisplayStringConverter" />
        <converters:EnumToIndexConverter x:Key="EnumToIndexConverter" />
        <converters:SafeImageSourceConverter x:Key="SafeImageSourceConverter" />
    </ContentPage.Resources>
    <ContentPage.Content>
        <ScrollView>
            <VerticalStackLayout Padding="{StaticResource PagePadding}"
                                 Spacing="{StaticResource SpacingLarge}">
                <Label Text="Neural Network Hub"
                       FontSize="{StaticResource FontSizeTitle}"
                       FontAttributes="Bold"
                       HorizontalOptions="Center" />
                <!-- Mode Toggle Panel -->
                <Frame BorderColor="{AppThemeBinding Light={StaticResource Primary}, Dark={StaticResource PrimaryDark}}"
                       CornerRadius="{StaticResource CornerRadiusLarge}"
                       Padding="{StaticResource CardPadding}">
                    <VerticalStackLayout Spacing="{StaticResource SpacingMedium}">
                        <Label Text="AI Model Operation Modes"
                               FontSize="{StaticResource FontSizeSubtitle}"
                               FontAttributes="Bold" />
                        <Grid ColumnDefinitions="*,*"
                              ColumnSpacing="{StaticResource SpacingMedium}">
                            <Frame Grid.Column="0"
                                   BackgroundColor="{AppThemeBinding Light={StaticResource PrimaryExtraLight}, Dark={StaticResource PrimaryDark}}"
                                   Padding="{StaticResource CardPadding}"
                                   CornerRadius="{StaticResource CornerRadiusMedium}">
                                <VerticalStackLayout>
                                    <Label Text="General Assistant Mode"
                                           FontAttributes="Bold"
                                           HorizontalOptions="Center" />
                                    <Label Text="Watches all inputs and responds based on learned patterns"
                                           FontSize="{StaticResource FontSizeSmall}"
                                           HorizontalOptions="Center"
                                           TextColor="{AppThemeBinding Light={StaticResource TextSecondary}, Dark={StaticResource TextSecondaryDark}}" />
                                    <Switch IsToggled="{Binding IsGeneralModeActive, Mode=TwoWay}"
                                            OnColor="{AppThemeBinding Light={StaticResource Primary}, Dark={StaticResource PrimaryDark}}"
                                            HorizontalOptions="Center"
                                            Toggled="OnGeneralModeToggled" />
                                </VerticalStackLayout>
                            </Frame>
                            <Frame Grid.Column="1"
                                   BackgroundColor="{AppThemeBinding Light={StaticResource SecondaryExtraLight}, Dark={StaticResource SecondaryDark}}"
                                   Padding="{StaticResource CardPadding}"
                                   CornerRadius="{StaticResource CornerRadiusMedium}">
                                <VerticalStackLayout>
                                    <Label Text="Specific Goal Mode"
                                           FontAttributes="Bold"
                                           HorizontalOptions="Center" />
                                    <Label Text="Execute predefined models for specific tasks"
                                           FontSize="{StaticResource FontSizeSmall}"
                                           HorizontalOptions="Center"
                                           TextColor="{AppThemeBinding Light={StaticResource TextSecondary}, Dark={StaticResource TextSecondaryDark}}" />
                                    <Switch IsToggled="{Binding IsSpecificModeActive, Mode=TwoWay}"
                                            OnColor="{AppThemeBinding Light={StaticResource Secondary}, Dark={StaticResource SecondaryDark}}"
                                            HorizontalOptions="Center"
                                            Toggled="OnSpecificModeToggled" />
                                </VerticalStackLayout>
                            </Frame>
                        </Grid>
                        <!-- Status Display -->
                        <Frame BackgroundColor="{AppThemeBinding Light={StaticResource BackgroundSecondary}, Dark={StaticResource BackgroundDark}}"
                               CornerRadius="{StaticResource CornerRadiusSmall}"
                               Padding="{StaticResource CardContentPadding}">
                            <VerticalStackLayout>
                                <Label Text="System Status"
                                       FontSize="{StaticResource FontSizeSmall}"
                                       FontAttributes="Bold" />
                                <Label Text="{Binding CurrentModelStatus}"
                                       TextColor="{AppThemeBinding Light={StaticResource PrimaryDark}, Dark={StaticResource Primary}}" />
                                <Label Text="Active Models:"
                                       FontSize="{StaticResource FontSizeSmall}" />
                                <Label Text="{Binding ActiveModelsCount, StringFormat='{0} models running'}"
                                       TextColor="{Binding ActiveModelsCount, Converter={StaticResource IntToColorConverter}, ConverterParameter=0|{StaticResource Error}|{StaticResource Success}}" />
                            </VerticalStackLayout>
                        </Frame>
                    </VerticalStackLayout>
                </Frame>
                <!-- Intelligent Pipeline Interaction Section -->
                <Frame BorderColor="{AppThemeBinding Light={StaticResource Tertiary}, Dark={StaticResource TertiaryDark}}"
                       CornerRadius="{StaticResource CornerRadiusLarge}"
                       Padding="{StaticResource CardPadding}">
                    <VerticalStackLayout Spacing="{StaticResource SpacingMedium}">
                        <Label Text="Intelligent Pipeline Interaction"
                               FontSize="{StaticResource FontSizeSubtitle}"
                               FontAttributes="Bold" />
                        <!-- Pipeline Selector and Intelligence Toggle -->
                        <Grid ColumnDefinitions="*,Auto,Auto"
                              ColumnSpacing="{StaticResource SpacingMedium}">
                            <!-- Pipeline Selector -->
                            <VerticalStackLayout Grid.Column="0">
                                <Label Text="Select Pipeline:"
                                       FontSize="{StaticResource FontSizeSmall}"
                                       TextColor="{AppThemeBinding Light={StaticResource TextSecondary}, Dark={StaticResource TextSecondaryDark}}" />
                                <Picker x:Name="PipelineSelector"
                                        ItemsSource="{Binding AvailablePipelines}"
                                        SelectedItem="{Binding SelectedPipeline, Mode=TwoWay}"
                                        Title="Choose a pipeline..."
                                        FontSize="{StaticResource FontSizeBody}"
                                        BackgroundColor="{AppThemeBinding Light={StaticResource BackgroundSecondary}, Dark={StaticResource BackgroundDark}}"
                                        TextColor="{AppThemeBinding Light={StaticResource TextPrimary}, Dark={StaticResource TextPrimaryDark}}" />
                                <!-- Enhanced Pipeline Information -->
                                <Label Text="{Binding SelectedPipelineInfo}"
                                       FontSize="{StaticResource FontSizeCaption}"
                                       TextColor="{StaticResource TextSecondary}"
                                       IsVisible="{Binding SelectedPipeline, Converter={StaticResource NullToBoolConverter}}"
                                       Margin="0,4,0,0" />
                            </VerticalStackLayout>
                            <!-- Intelligence Toggle -->
                            <VerticalStackLayout Grid.Column="1"
                                                 VerticalOptions="Center">
                                <Label Text="Intelligence"
                                       FontSize="{StaticResource FontSizeSmall}"
                                       TextColor="{AppThemeBinding Light={StaticResource TextSecondary}, Dark={StaticResource TextSecondaryDark}}"
                                       HorizontalOptions="Center" />
                                <Switch x:Name="IntelligenceToggle"
                                        IsToggled="{Binding IsIntelligenceActive, Mode=TwoWay}"
                                        OnColor="{AppThemeBinding Light={StaticResource Tertiary}, Dark={StaticResource TertiaryDark}}"
                                        ThumbColor="{AppThemeBinding Light={StaticResource TextOnTertiary}, Dark={StaticResource TextOnTertiary}}"
                                        HorizontalOptions="Center" />
                            </VerticalStackLayout>
                            <!-- Status Indicator -->
                            <VerticalStackLayout Grid.Column="2"
                                                 VerticalOptions="Center">
                                <Frame BackgroundColor="{Binding IntelligenceStatusColor}"
                                       CornerRadius="15"
                                       Padding="8,4"
                                       HasShadow="False">
                                    <Label Text="{Binding IntelligenceStatusText}"
                                           FontSize="{StaticResource FontSizeCaption}"
                                           TextColor="{AppThemeBinding Light={StaticResource TextOnPrimary}, Dark={StaticResource TextOnPrimary}}"
                                           FontAttributes="Bold" />
                                </Frame>
                            </VerticalStackLayout>
                        </Grid>
                        <!-- Pipeline Management Controls -->
                        <Grid ColumnDefinitions="*,Auto,Auto"
                              ColumnSpacing="{StaticResource SpacingSmall}"
                              Margin="0,8,0,0">
                            <Label Grid.Column="0"
                                   Text="{Binding AvailablePipelinesCount, StringFormat='Available Pipelines: {0}'}"
                                   FontSize="{StaticResource FontSizeCaption}"
                                   TextColor="{StaticResource TextSecondary}"
                                   VerticalOptions="Center" />
                            <Button Grid.Column="1"
                                    Text="Refresh"
                                    Command="{Binding RefreshPipelinesCommand}"
                                    FontSize="{StaticResource FontSizeCaption}"
                                    BackgroundColor="{StaticResource Primary}"
                                    TextColor="{StaticResource TextOnPrimary}"
                                    Padding="12,4"
                                    CornerRadius="12" />
                            <Button Grid.Column="2"
                                    Text="Create New"
                                    Command="{Binding CreateNewPipelineCommand}"
                                    FontSize="{StaticResource FontSizeCaption}"
                                    BackgroundColor="{StaticResource Success}"
                                    TextColor="{StaticResource TextOnPrimary}"
                                    Padding="12,4"
                                    CornerRadius="12" />
                        </Grid>
                        <!-- Pipeline Chat Section -->
                        <Label Text="Pipeline Chat"
                               FontAttributes="Bold" />
                        <Frame BackgroundColor="{StaticResource BackgroundSecondary}"
                               CornerRadius="{StaticResource CornerRadiusSmall}"
                               Padding="{StaticResource CardContentPadding}"
                               HeightRequest="300">
                            <ScrollView x:Name="PipelineChatScrollView"
                                        VerticalScrollBarVisibility="Always"
                                        HorizontalScrollBarVisibility="Never">
                                <CollectionView ItemsSource="{Binding PipelineChatMessages}"
                                                SelectionMode="None"
                                                x:Name="PipelineChatCollectionView">
                                    <CollectionView.ItemTemplate>
                                        <DataTemplate x:DataType="models:ChatMessage">
                                            <Grid Padding="{StaticResource SpacingSmall}"
                                                  Margin="{StaticResource MarginBottomTiny}">
                                                <!-- User Message (Right-aligned) -->
                                                <Frame IsVisible="{Binding IsFromUser, Converter={StaticResource BoolConverter}}"
                                                       BackgroundColor="{AppThemeBinding Light={StaticResource Tertiary}, Dark={StaticResource TertiaryDark}}"
                                                       Padding="{StaticResource CardContentPadding}"
                                                       CornerRadius="8"
                                                       Margin="50,0,0,0"
                                                       HorizontalOptions="End">
                                                    <VerticalStackLayout>
                                                        <Label Text="You"
                                                               FontSize="{StaticResource FontSizeCaption}"
                                                               FontAttributes="Bold"
                                                               TextColor="{StaticResource TextOnTertiary}"
                                                               HorizontalOptions="End" />
                                                        <Label Text="{Binding Content}"
                                                               TextColor="{StaticResource TextOnTertiary}"
                                                               LineBreakMode="WordWrap" />
                                                        <Label Text="{Binding Timestamp, StringFormat='{0:HH:mm}'}"
                                                               FontSize="{StaticResource FontSizeCaption}"
                                                               TextColor="{StaticResource TextOnTertiary}"
                                                               Opacity="0.7"
                                                               HorizontalOptions="End" />
                                                    </VerticalStackLayout>
                                                </Frame>
                                                <!-- AI Response (Left-aligned) -->
                                                <Frame IsVisible="{Binding IsFromUser, Converter={StaticResource InverseBoolConverter}}"
                                                       BackgroundColor="{AppThemeBinding Light={StaticResource BackgroundPrimary}, Dark={StaticResource Gray600}}"
                                                       Padding="{StaticResource CardContentPadding}"
                                                       CornerRadius="8"
                                                       Margin="0,0,50,0"
                                                       HorizontalOptions="Start"
                                                       BorderColor="{AppThemeBinding Light={StaticResource Gray300}, Dark={StaticResource Gray500}}">
                                                    <VerticalStackLayout>
                                                        <Label Text="Pipeline Assistant"
                                                               FontSize="{StaticResource FontSizeCaption}"
                                                               FontAttributes="Bold"
                                                               TextColor="{AppThemeBinding Light={StaticResource Tertiary}, Dark={StaticResource TertiaryDark}}"
                                                               HorizontalOptions="Start" />
                                                        <Label Text="{Binding Content}"
                                                               TextColor="{StaticResource TextPrimary}"
                                                               LineBreakMode="WordWrap" />
                                                        <Label Text="{Binding Timestamp, StringFormat='{0:HH:mm}'}"
                                                               FontSize="{StaticResource FontSizeCaption}"
                                                               TextColor="{StaticResource TextSecondary}"
                                                               Opacity="0.7"
                                                               HorizontalOptions="Start" />
                                                    </VerticalStackLayout>
                                                </Frame>
                                            </Grid>
                                        </DataTemplate>
                                    </CollectionView.ItemTemplate>
                                    <CollectionView.EmptyView>
                                        <VerticalStackLayout HorizontalOptions="Center"
                                                             VerticalOptions="Center"
                                                             Spacing="{StaticResource SpacingSmall}">
                                            <Label Text="🔧"
                                                   FontSize="48"
                                                   HorizontalOptions="Center" />
                                            <Label Text="Select a pipeline and start chatting"
                                                   TextColor="{StaticResource TextSecondary}"
                                                   HorizontalOptions="Center"
                                                   FontSize="{StaticResource FontSizeSmall}" />
                                        </VerticalStackLayout>
                                    </CollectionView.EmptyView>
                                </CollectionView>
                            </ScrollView>
                        </Frame>
                        <!-- Input Section -->
                        <Label Text="Input"
                               FontAttributes="Bold" />
                        <!-- Text Input -->
                        <Grid ColumnDefinitions="*,Auto,Auto"
                              ColumnSpacing="{StaticResource SpacingSmall}">
                            <Entry Grid.Column="0"
                                   Placeholder="Enter your goal or question here..."
                                   Text="{Binding UserGoalInput, Mode=TwoWay}"
                                   x:Name="GoalTextInput"
                                   ReturnType="Send"
                                   ReturnCommand="{Binding SendGoalCommand}" />
                            <Button Grid.Column="1"
                                    Text="Send"
                                    Command="{Binding SendGoalCommand}"
                                    CommandParameter="{Binding Source={x:Reference GoalTextInput}, Path=Text}"
                                    BackgroundColor="{StaticResource Primary}"
                                    TextColor="{StaticResource TextOnPrimary}"
                                    IsEnabled="{Binding CanSendGoal}" />
                            <Button Grid.Column="2"
                                    Text="Clear"
                                    Command="{Binding ClearPipelineChatCommand}"
                                    BackgroundColor="{StaticResource Error}"
                                    TextColor="{StaticResource TextOnPrimary}"
                                    FontSize="{StaticResource FontSizeSmall}" />
                        </Grid>
                        <!-- Pipeline Status and Recording Options -->
                        <Grid ColumnDefinitions="*,*"
                              ColumnSpacing="{StaticResource SpacingMedium}">
                            <!-- Recording Settings -->
                            <Frame Grid.Column="0"
                                   BackgroundColor="{AppThemeBinding Light={StaticResource PrimaryExtraLight}, Dark={StaticResource PrimaryDark}}"
                                   CornerRadius="{StaticResource CornerRadiusSmall}"
                                   Padding="{StaticResource CardContentPadding}">
                                <VerticalStackLayout Spacing="{StaticResource SpacingTiny}">
                                    <Label Text="Recording Settings"
                                           FontSize="{StaticResource FontSizeSmall}"
                                           FontAttributes="Bold"
                                           TextColor="{AppThemeBinding Light={StaticResource TextPrimary}, Dark={StaticResource TextPrimaryDark}}" />
                                    <Grid ColumnDefinitions="Auto,*"
                                          RowDefinitions="Auto,Auto"
                                          RowSpacing="4"
                                          ColumnSpacing="8">
                                        <CheckBox Grid.Row="0"
                                                  Grid.Column="0"
                                                  IsChecked="{Binding RecordMouseInputs, Mode=TwoWay}"
                                                  Color="{AppThemeBinding Light={StaticResource Primary}, Dark={StaticResource PrimaryDark}}" />
                                        <Label Grid.Row="0"
                                               Grid.Column="1"
                                               Text="Record Mouse Inputs"
                                               FontSize="{StaticResource FontSizeCaption}"
                                               VerticalOptions="Center" />
                                        <CheckBox Grid.Row="1"
                                                  Grid.Column="0"
                                                  IsChecked="{Binding RecordKeyboardInputs, Mode=TwoWay}"
                                                  Color="{AppThemeBinding Light={StaticResource Primary}, Dark={StaticResource PrimaryDark}}" />
                                        <Label Grid.Row="1"
                                               Grid.Column="1"
                                               Text="Record Keyboard Inputs"
                                               FontSize="{StaticResource FontSizeCaption}"
                                               VerticalOptions="Center" />
                                    </Grid>
                                </VerticalStackLayout>
                            </Frame>
                            <!-- Pipeline Status -->
                            <Frame Grid.Column="1"
                                   BackgroundColor="{AppThemeBinding Light={StaticResource SecondaryExtraLight}, Dark={StaticResource SecondaryDark}}"
                                   CornerRadius="{StaticResource CornerRadiusSmall}"
                                   Padding="{StaticResource CardContentPadding}">
                                <VerticalStackLayout Spacing="{StaticResource SpacingTiny}">
                                    <Label Text="Pipeline Status"
                                           FontSize="{StaticResource FontSizeSmall}"
                                           FontAttributes="Bold"
                                           TextColor="{AppThemeBinding Light={StaticResource TextPrimary}, Dark={StaticResource TextPrimaryDark}}" />
                                    <Label Text="{Binding SelectedPipelineStatus}"
                                           FontSize="{StaticResource FontSizeCaption}"
                                           TextColor="{Binding PipelineStatusColor}" />
                                    <Label Text="{Binding ActiveInputNodesCount, StringFormat='Active Input Nodes: {0}'}"
                                           FontSize="{StaticResource FontSizeCaption}"
                                           TextColor="{AppThemeBinding Light={StaticResource TextSecondary}, Dark={StaticResource TextSecondaryDark}}" />
                                    <Label Text="{Binding ConnectedModelsCount, StringFormat='Connected Models: {0}'}"
                                           FontSize="{StaticResource FontSizeCaption}"
                                           TextColor="{AppThemeBinding Light={StaticResource TextSecondary}, Dark={StaticResource TextSecondaryDark}}" />
                                </VerticalStackLayout>
                            </Frame>
                        </Grid>
                    </VerticalStackLayout>
                </Frame>
                <!-- Pipeline Status Dashboard -->
                <Frame BorderColor="{AppThemeBinding Light={StaticResource Secondary}, Dark={StaticResource SecondaryDark}}"
                       CornerRadius="{StaticResource CornerRadiusLarge}"
                       Padding="{StaticResource CardPadding}">
                    <VerticalStackLayout Spacing="{StaticResource SpacingMedium}">
                        <Label Text="Pipeline Dashboard"
                               FontSize="{StaticResource FontSizeLarge}"
                               FontAttributes="Bold"
                               HorizontalOptions="Center"
                               TextColor="{AppThemeBinding Light={StaticResource Secondary}, Dark={StaticResource SecondaryDark}}" />
                        <!-- Status Cards Grid -->
                        <Grid ColumnDefinitions="*,*,*,*"
                              ColumnSpacing="{StaticResource SpacingSmall}">
                            <Frame Grid.Column="0"
                                   BackgroundColor="{AppThemeBinding Light={StaticResource PrimaryLight}, Dark={StaticResource PrimaryDark}}"
                                   Padding="{StaticResource CardContentPadding}"
                                   Margin="{StaticResource SpacingTiny}"
                                   CornerRadius="{StaticResource CornerRadiusSmall}">
                                <VerticalStackLayout>
                                    <Label Text="Total Pipelines"
                                           FontSize="{StaticResource FontSizeCaption}"
                                           HorizontalOptions="Center" />
                                    <Label Text="{Binding PipelineCount}"
                                           FontSize="{StaticResource FontSizeTitle}"
                                           HorizontalOptions="Center"
                                           FontAttributes="Bold"
                                           TextColor="{AppThemeBinding Light={StaticResource Primary}, Dark={StaticResource PrimaryLight}}" />
                                </VerticalStackLayout>
                            </Frame>
                            <Frame Grid.Column="1"
                                   BackgroundColor="{AppThemeBinding Light={StaticResource SecondaryLight}, Dark={StaticResource SecondaryDark}}"
                                   Padding="{StaticResource CardContentPadding}"
                                   Margin="{StaticResource SpacingTiny}"
                                   CornerRadius="{StaticResource CornerRadiusSmall}">
                                <VerticalStackLayout>
                                    <Label Text="Pipeline Nodes"
                                           FontSize="{StaticResource FontSizeCaption}"
                                           HorizontalOptions="Center" />
                                    <Label Text="{Binding PipelineNodeCount}"
                                           FontSize="{StaticResource FontSizeTitle}"
                                           HorizontalOptions="Center"
                                           FontAttributes="Bold"
                                           TextColor="{AppThemeBinding Light={StaticResource Secondary}, Dark={StaticResource SecondaryLight}}" />
                                </VerticalStackLayout>
                            </Frame>
                            <Frame Grid.Column="2"
                                   BackgroundColor="{AppThemeBinding Light={StaticResource ErrorLight}, Dark={StaticResource ErrorDark}}"
                                   Padding="{StaticResource CardContentPadding}"
                                   Margin="{StaticResource SpacingTiny}"
                                   CornerRadius="{StaticResource CornerRadiusSmall}">
                                <VerticalStackLayout>
                                    <Label Text="Running Tasks"
                                           FontSize="{StaticResource FontSizeCaption}"
                                           HorizontalOptions="Center" />
                                    <Label Text="{Binding RunningProcesses}"
                                           FontSize="{StaticResource FontSizeTitle}"
                                           HorizontalOptions="Center"
                                           FontAttributes="Bold"
                                           TextColor="{AppThemeBinding Light={StaticResource Error}, Dark={StaticResource ErrorLight}}" />
                                </VerticalStackLayout>
                            </Frame>
                            <Frame Grid.Column="3"
                                   BackgroundColor="{AppThemeBinding Light={StaticResource TertiaryLight}, Dark={StaticResource TertiaryDark}}"
                                   Padding="{StaticResource CardContentPadding}"
                                   Margin="{StaticResource SpacingTiny}"
                                   CornerRadius="{StaticResource CornerRadiusSmall}">
                                <VerticalStackLayout>
                                    <Label Text="Active Models"
                                           FontSize="{StaticResource FontSizeCaption}"
                                           HorizontalOptions="Center" />
                                    <Label Text="{Binding ActiveModels.Count}"
                                           FontSize="{StaticResource FontSizeTitle}"
                                           HorizontalOptions="Center"
                                           FontAttributes="Bold"
                                           TextColor="{AppThemeBinding Light={StaticResource TertiaryDark}, Dark={StaticResource Tertiary}}" />
                                </VerticalStackLayout>
                            </Frame>
                        </Grid>
                    </VerticalStackLayout>
                </Frame>
                <!-- COMBINED COMPONENT: Model Management Center -->
                <Frame BorderColor="{AppThemeBinding Light={StaticResource Primary}, Dark={StaticResource PrimaryDark}}"
                       CornerRadius="{StaticResource CornerRadiusLarge}"
                       Padding="{StaticResource CardPadding}">
                    <VerticalStackLayout Spacing="{StaticResource SpacingMedium}">
                        <Label Text="Model Management Center"
                               FontSize="{StaticResource FontSizeSubtitle}"
                               FontAttributes="Bold" />
                        <!-- Network Stats -->
                        <Grid ColumnDefinitions="*,*,*"
                              RowDefinitions="Auto,Auto">
                            <Frame Grid.Column="0"
                                   BackgroundColor="{AppThemeBinding Light={StaticResource PrimaryExtraLight}, Dark={StaticResource PrimaryDark}}"
                                   Padding="{StaticResource CardContentPadding}"
                                   Margin="{StaticResource SpacingTiny}"
                                   CornerRadius="{StaticResource CornerRadiusSmall}">
                                <VerticalStackLayout>
                                    <Label Text="Active Models"
                                           FontSize="{StaticResource FontSizeCaption}" />
                                    <Label Text="{Binding ActiveModelsCount}"
                                           FontSize="{StaticResource FontSizeTitle}"
                                           HorizontalOptions="Center"
                                           TextColor="{AppThemeBinding Light={StaticResource Primary}, Dark={StaticResource PrimaryDark}}" />
                                </VerticalStackLayout>
                            </Frame>
                            <Frame Grid.Column="1"
                                   BackgroundColor="{AppThemeBinding Light={StaticResource ErrorLight}, Dark={StaticResource Error}}"
                                   Padding="{StaticResource CardContentPadding}"
                                   Margin="{StaticResource SpacingTiny}"
                                   CornerRadius="{StaticResource CornerRadiusSmall}">
                                <VerticalStackLayout>
                                    <Label Text="Available Models"
                                           FontSize="{StaticResource FontSizeCaption}" />
                                    <Label Text="{Binding AvailableModels.Count}"
                                           FontSize="{StaticResource FontSizeTitle}"
                                           HorizontalOptions="Center"
                                           TextColor="{AppThemeBinding Light={StaticResource Error}, Dark={StaticResource ErrorLight}}" />
                                </VerticalStackLayout>
                            </Frame>
                            <Frame Grid.Column="2"
                                   BackgroundColor="{AppThemeBinding Light={StaticResource TertiaryLight}, Dark={StaticResource TertiaryDark}}"
                                   Padding="{StaticResource CardContentPadding}"
                                   Margin="{StaticResource SpacingTiny}"
                                   CornerRadius="{StaticResource CornerRadiusSmall}">
                                <VerticalStackLayout>
                                    <Label Text="Available Goals"
                                           FontSize="{StaticResource FontSizeCaption}" />
                                    <Label Text="{Binding AvailableGoals.Count}"
                                           FontSize="{StaticResource FontSizeTitle}"
                                           HorizontalOptions="Center"
                                           TextColor="{AppThemeBinding Light={StaticResource TertiaryDark}, Dark={StaticResource Tertiary}}" />
                                </VerticalStackLayout>
                            </Frame>
                        </Grid>
                        <!-- Active Models List -->
                        <Label Text="Currently Active Models"
                               FontAttributes="Bold"
                               Margin="{StaticResource MarginTopMedium}" />
                        <CollectionView ItemsSource="{Binding ActiveModels}"
                                        EmptyView="No active models.">
                            <CollectionView.ItemTemplate>
                                <DataTemplate x:DataType="models:NeuralNetworkModel">
                                    <Grid Padding="{StaticResource SpacingTiny}"
                                          ColumnDefinitions="*,Auto">
                                        <VerticalStackLayout Grid.Column="0">
                                            <Label Text="{Binding Name}"
                                                   FontAttributes="Bold" />
                                            <Label Text="{Binding Description}"
                                                   FontSize="{StaticResource FontSizeSmall}" />
                                            <Label Text="{Binding Type}"
                                                   FontSize="{StaticResource FontSizeSmall}"
                                                   TextColor="{StaticResource TextSecondary}" />
                                        </VerticalStackLayout>
                                        <Button Grid.Column="1"
                                                Text="Stop"
                                                BackgroundColor="{StaticResource Error}"
                                                TextColor="{StaticResource TextOnPrimary}"
                                                Command="{Binding Source={RelativeSource AncestorType={x:Type ContentPage}}, Path=BindingContext.DeactivateModelCommand}"
                                                CommandParameter="{Binding .}"
                                                VerticalOptions="Center" />
                                    </Grid>
                                </DataTemplate>
                            </CollectionView.ItemTemplate>
                        </CollectionView>
                        <!-- Available Models Section -->
                        <Label Text="General Purpose Models"
                               FontAttributes="Bold"
                               IsVisible="{Binding IsGeneralModeActive}" />
                        <CollectionView ItemsSource="{Binding AvailableModels}"
                                        IsVisible="{Binding IsGeneralModeActive}"
                                        EmptyView="No general models available.">
                            <CollectionView.ItemsLayout>
                                <LinearItemsLayout Orientation="Vertical"
                                                   ItemSpacing="{StaticResource SpacingSmall}" />
                            </CollectionView.ItemsLayout>
                            <CollectionView.ItemTemplate>
                                <DataTemplate x:DataType="models:NeuralNetworkModel">
                                    <Frame BorderColor="LightGray"
                                           Padding="{StaticResource CardContentPadding}"
                                           Margin="{StaticResource MarginTiny}"
                                           CornerRadius="{StaticResource CornerRadiusSmall}">
                                        <!-- Use Grid for better layout with the new dropdown -->
                                        <Grid ColumnDefinitions="*,Auto,Auto,Auto,Auto,Auto,Auto"
                                              ColumnSpacing="{StaticResource SpacingSmall}">
                                            <VerticalStackLayout Grid.Column="0">
                                                <Label Text="{Binding Name}"
                                                       FontAttributes="Bold" />
                                                <Label Text="{Binding Description}"
                                                       FontSize="{StaticResource FontSizeSmall}" />
                                                <!-- Optional: Display brief status -->
                                                <Label Text="{Binding TrainingStatus, StringFormat='Status: {0}'}"
                                                       FontSize="{StaticResource FontSizeCaption}"
                                                       TextColor="{StaticResource TextSecondary}" />
                                            </VerticalStackLayout>
                                            <!-- Input Type Dropdown -->
                                            <VerticalStackLayout Grid.Column="1"
                                                                 VerticalOptions="Center">
                                                <Label Text="Input Type:"
                                                       FontSize="{StaticResource FontSizeCaption}"
                                                       TextColor="{StaticResource TextSecondary}"
                                                       Margin="{StaticResource MarginBottomTiny}"
                                                       HorizontalOptions="Center" />
                                                <Picker SelectedIndex="{Binding InputType, Mode=TwoWay, Converter={StaticResource EnumToIndexConverter}}"
                                                        ItemsSource="{x:Static models:NeuralNetworkModel.InputTypeDisplayItems}"
                                                        ItemDisplayBinding="{Binding DisplayName}"
                                                        SelectedIndexChanged="OnModelInputTypeChanged"
                                                        WidthRequest="120"
                                                        x:Name="InputTypePicker" />
                                            </VerticalStackLayout>
                                            <!-- HuggingFace Model Download/Delete Button with Progress -->
                                            <Grid Grid.Column="2"
                                                  VerticalOptions="Center"
                                                  WidthRequest="180">
                                                <Button Text="{Binding DownloadButtonText}"
                                                        Command="{Binding Source={RelativeSource AncestorType={x:Type viewmodels:NetPageViewModel}}, Path=DownloadOrDeleteModelCommand}"
                                                        CommandParameter="{Binding .}"
                                                        BackgroundColor="{StaticResource Secondary}"
                                                        TextColor="{StaticResource TextOnSecondary}"
                                                        IsVisible="{Binding IsHuggingFaceReference}"
                                                        WidthRequest="180"
                                                        HeightRequest="40" />
                                                <!-- Progress bar overlay - positioned below button -->
                                                <Frame IsVisible="{Binding IsDownloading}"
                                                       BackgroundColor="Transparent"
                                                       BorderColor="Transparent"
                                                       Padding="0"
                                                       VerticalOptions="End"
                                                       HorizontalOptions="Fill"
                                                       HeightRequest="4"
                                                       Margin="0,44,0,0">
                                                    <ProgressBar Progress="{Binding DownloadProgress}"
                                                                 ProgressColor="{StaticResource Primary}"
                                                                 BackgroundColor="LightGray"
                                                                 HeightRequest="4" />
                                                </Frame>
                                                <!-- Download status label - positioned below progress bar -->
                                                <Label Text="{Binding DownloadStatus}"
                                                       IsVisible="{Binding IsDownloading}"
                                                       FontSize="10"
                                                       TextColor="{StaticResource TextSecondary}"
                                                       HorizontalOptions="Center"
                                                       VerticalOptions="End"
                                                       BackgroundColor="Transparent"
                                                       Margin="0,50,0,0" />
                                            </Grid>
                                            <!-- Delete HF Reference Button -->
                                            <Button Grid.Column="3"
                                                    Text="Delete Ref"
                                                    Command="{Binding Source={RelativeSource AncestorType={x:Type viewmodels:NetPageViewModel}}, Path=DeleteModelReferenceCommand}"
                                                    CommandParameter="{Binding .}"
                                                    BackgroundColor="{StaticResource Error}"
                                                    TextColor="{StaticResource TextOnPrimary}"
                                                    VerticalOptions="Center"
                                                    IsVisible="{Binding IsHuggingFaceReference}" />
                                            <!-- Train/Refine Button -->
                                            <Button Grid.Column="4"
                                                    Text="Train"
                                                    Command="{Binding Source={RelativeSource AncestorType={x:Type viewmodels:NetPageViewModel}}, Path=GoToOrientCommand}"
                                                    CommandParameter="{Binding .}"
                                                    BackgroundColor="{StaticResource Tertiary}"
                                                    TextColor="{StaticResource TextOnPrimary}"
                                                    VerticalOptions="Center" />
                                            <!-- Activate Button -->
                                            <Button Grid.Column="5"
                                                    Text="Activate"
                                                    Command="{Binding Source={RelativeSource AncestorType={x:Type viewmodels:NetPageViewModel}}, Path=ActivateModelCommand}"
                                                    CommandParameter="{Binding .}"
                                                    BackgroundColor="{StaticResource Primary}"
                                                    TextColor="{StaticResource TextOnPrimary}"
                                                    VerticalOptions="Center" />
                                            <!-- Open in File Explorer Button -->
                                            <Button Grid.Column="6"
                                                    Text="File Explorer"
                                                    Command="{Binding Source={RelativeSource AncestorType={x:Type viewmodels:NetPageViewModel}}, Path=OpenModelInExplorerCommand}"
                                                    CommandParameter="{Binding .}"
                                                    BackgroundColor="{StaticResource Tertiary}"
                                                    TextColor="{StaticResource TextOnPrimary}"
                                                    VerticalOptions="Center"
                                                    ToolTipProperties.Text="Open in File Explorer" />
                                        </Grid>
                                    </Frame>
                                </DataTemplate>
                            </CollectionView.ItemTemplate>
                        </CollectionView>
                        <!-- Specific Goal Section -->
                        <Label Text="Available Goal Models"
                               FontAttributes="Bold"
                               IsVisible="{Binding IsSpecificModeActive}" />
                        <CollectionView ItemsSource="{Binding AvailableGoals}"
                                        IsVisible="{Binding IsSpecificModeActive}"
                                        EmptyView="No goals available.">
                            <CollectionView.ItemTemplate>
                                <DataTemplate x:DataType="models:SpecificGoal">
                                    <Frame BorderColor="LightGray"
                                           Padding="{StaticResource CardContentPadding}"
                                           Margin="{StaticResource MarginTiny}"
                                           CornerRadius="{StaticResource CornerRadiusSmall}">
                                        <Grid ColumnDefinitions="*,Auto">
                                            <VerticalStackLayout Grid.Column="0">
                                                <Label Text="{Binding Name}"
                                                       FontAttributes="Bold" />
                                                <Label Text="{Binding Description}"
                                                       FontSize="{StaticResource FontSizeSmall}" />
                                            </VerticalStackLayout>
                                            <Button Grid.Column="1"
                                                    Text="Load Goal"
                                                    Command="{Binding Source={RelativeSource AncestorType={x:Type ContentPage}}, Path=BindingContext.LoadSpecificGoalCommand}"
                                                    CommandParameter="{Binding .}"
                                                    BackgroundColor="{StaticResource Secondary}"
                                                    TextColor="{StaticResource TextOnSecondary}" />
                                        </Grid>
                                    </Frame>
                                </DataTemplate>
                            </CollectionView.ItemTemplate>
                        </CollectionView>
                        <!-- Model Sharing Controls -->
                        <Label Text="Model Sharing"
                               FontAttributes="Bold"
                               Margin="{StaticResource MarginTopMedium}" />
                        <Picker Title="Select Model to Share"
                                ItemDisplayBinding="{Binding Name}"
                                ItemsSource="{Binding AvailableModels}"
                                x:Name="ShareModelPicker" />
                        <Grid ColumnDefinitions="*,*"
                              ColumnSpacing="{StaticResource SpacingSmall}">
                            <Button Grid.Column="0"
                                    Text="Share Model"
                                    Command="{Binding ShareModelCommand}"
                                    CommandParameter="{Binding Source={x:Reference ShareModelPicker}, Path=SelectedItem}"
                                    BackgroundColor="{StaticResource Tertiary}"
                                    TextColor="{StaticResource TextOnPrimary}" />
                            <Button Grid.Column="1"
                                    Text="Import Model"
                                    Clicked="OnImportModelClicked"
                                    IsEnabled="{Binding IsLoading, Converter={StaticResource InverseBoolConverter}}"
                                    BackgroundColor="{StaticResource Primary}"
                                    TextColor="{StaticResource TextOnPrimary}" />
                        </Grid>
                        <ActivityIndicator IsRunning="{Binding IsLoading}"
                                           IsVisible="{Binding IsLoading}"
                                           HorizontalOptions="Center"
                                           Margin="{StaticResource MarginTopSmall}" />
                        <Entry Placeholder="Enter share code to import model"
                               Margin="{StaticResource MarginTopMedium}"
                               IsEnabled="{Binding IsLoading, Converter={StaticResource InverseBoolConverter}}" />
                        <Label Text="HuggingFace Model Import"
                               FontAttributes="Bold"
                               Margin="{StaticResource MarginTopMedium}" />
                        <Grid ColumnDefinitions="*,Auto"
                              ColumnSpacing="{StaticResource SpacingSmall}">
                            <Entry Grid.Column="0"
                                   Placeholder="Search HuggingFace models..."
                                   Text="{Binding HuggingFaceSearchQuery}" />
                            <Button Grid.Column="1"
                                    Text="Search"
                                    Clicked="OnHuggingFaceSearchClicked"
                                    BackgroundColor="{StaticResource Secondary}"
                                    TextColor="{StaticResource TextOnPrimary}" />
                        </Grid>
                        <Picker Title="Model Category"
                                ItemsSource="{Binding HuggingFaceCategories}"
                                SelectedItem="{Binding SelectedHuggingFaceCategory}"
                                Margin="{StaticResource MarginTopSmall}" />
                        <Button Text="Import from HuggingFace by ID"
                                Clicked="OnImportFromHuggingFaceClicked"
                                BackgroundColor="{StaticResource Success}"
                                TextColor="{StaticResource TextOnPrimary}"
                                Margin="{StaticResource MarginTopSmall}" />
                    </VerticalStackLayout>
                </Frame>
                <!-- AI Assistant Chat -->
                <Frame BorderColor="{StaticResource Primary}"
                       CornerRadius="{StaticResource CornerRadiusLarge}"
                       Padding="{StaticResource CardPadding}">
                    <VerticalStackLayout Spacing="{StaticResource SpacingSmall}">
                        <!-- Chat History Section -->
                        <Label Text="Chat History"
                               FontAttributes="Bold" />
                        <Frame BackgroundColor="{StaticResource BackgroundSecondary}"
                               CornerRadius="{StaticResource CornerRadiusSmall}"
                               Padding="{StaticResource CardContentPadding}"
                               HeightRequest="300">
                            <CollectionView ItemsSource="{Binding ChatMessages}"
                                            SelectionMode="None"
                                            x:Name="ChatCollectionView">
                                <CollectionView.ItemTemplate>
                                    <DataTemplate x:DataType="models:ChatMessage">
                                        <Grid Padding="{StaticResource SpacingSmall}"
                                              Margin="{StaticResource MarginBottomTiny}">
                                            <!-- User Message (Right-aligned) -->
                                            <Frame IsVisible="{Binding IsFromUser, Converter={StaticResource BoolConverter}}"
                                                   BackgroundColor="{AppThemeBinding Light={StaticResource Primary}, Dark={StaticResource PrimaryDark}}"
                                                   Padding="{StaticResource CardContentPadding}"
                                                   CornerRadius="8"
                                                   Margin="50,0,0,0"
                                                   HorizontalOptions="End">
                                                <VerticalStackLayout>
                                                    <Label Text="You"
                                                           FontSize="{StaticResource FontSizeCaption}"
                                                           FontAttributes="Bold"
                                                           TextColor="{StaticResource TextOnPrimary}"
                                                           HorizontalOptions="End" />
                                                    <!-- Display either the label or the editor based on IsEditing -->
                                                    <ContentView>
                                                        <ContentView.Triggers>
                                                            <DataTrigger TargetType="ContentView"
                                                                         Binding="{Binding IsEditing}"
                                                                         Value="False">
                                                                <Setter Property="Content">
                                                                    <Setter.Value>
                                                                        <Label Text="{Binding Content}"
                                                                               TextColor="{StaticResource TextOnPrimary}"
                                                                               LineBreakMode="WordWrap" />
                                                                    </Setter.Value>
                                                                </Setter>
                                                            </DataTrigger>
                                                            <DataTrigger TargetType="ContentView"
                                                                         Binding="{Binding IsEditing}"
                                                                         Value="True">
                                                                <Setter Property="Content">
                                                                    <Setter.Value>
                                                                        <Entry Text="{Binding Content}"
                                                                               TextColor="{StaticResource TextOnPrimary}"
                                                                               HorizontalOptions="FillAndExpand" />
                                                                    </Setter.Value>
                                                                </Setter>
                                                            </DataTrigger>
                                                        </ContentView.Triggers>
                                                    </ContentView>
                                                    <Label Text="{Binding Timestamp, StringFormat='{0:HH:mm}'}"
                                                           FontSize="{StaticResource FontSizeCaption}"
                                                           TextColor="{StaticResource TextOnPrimary}"
                                                           Opacity="0.7"
                                                           HorizontalOptions="End" />
                                                    <!-- Edit and Save Buttons -->
                                                    <HorizontalStackLayout HorizontalOptions="End"
                                                                           IsVisible="{Binding IsEditing, Converter={StaticResource InverseBoolConverter}}">
                                                        <Button Text="Edit"
                                                                Command="{Binding Source={RelativeSource AncestorType={x:Type ContentPage}}, Path=BindingContext.EditMessageCommand}"
                                                                CommandParameter="{Binding .}"
                                                                BackgroundColor="{StaticResource Secondary}"
                                                                TextColor="{StaticResource TextOnPrimary}"
                                                                FontSize="{StaticResource FontSizeSmall}" />
                                                    </HorizontalStackLayout>
                                                    <HorizontalStackLayout HorizontalOptions="End"
                                                                           IsVisible="{Binding IsEditing}">
                                                        <Button Text="Save"
                                                                Command="{Binding Source={RelativeSource AncestorType={x:Type ContentPage}}, Path=BindingContext.SaveMessageCommand}"
                                                                CommandParameter="{Binding .}"
                                                                BackgroundColor="{StaticResource Success}"
                                                                TextColor="{StaticResource TextOnPrimary}"
                                                                FontSize="{StaticResource FontSizeSmall}" />
                                                    </HorizontalStackLayout>
                                                </VerticalStackLayout>
                                            </Frame>
                                            <!-- AI Response (Left-aligned) -->
                                            <Frame IsVisible="{Binding IsFromUser, Converter={StaticResource InverseBoolConverter}}"
                                                   BackgroundColor="{AppThemeBinding Light={StaticResource BackgroundPrimary}, Dark={StaticResource Gray600}}"
                                                   Padding="{StaticResource CardContentPadding}"
                                                   CornerRadius="8"
                                                   Margin="0,0,50,0"
                                                   HorizontalOptions="Start"
                                                   BorderColor="{AppThemeBinding Light={StaticResource Gray300}, Dark={StaticResource Gray500}}">
                                                <VerticalStackLayout>
                                                    <Label Text="{Binding ModelDisplayNameWithSourcePrefixed}"
                                                           FontSize="{StaticResource FontSizeCaption}"
                                                           FontAttributes="Bold"
                                                           TextColor="{AppThemeBinding Light={StaticResource Primary}, Dark={StaticResource PrimaryDark}}"
                                                           HorizontalOptions="Start" />
                                                    <!-- Display either the label or the editor based on IsEditing -->
                                                    <ContentView>
                                                        <ContentView.Triggers>
                                                            <DataTrigger TargetType="ContentView"
                                                                         Binding="{Binding IsEditing}"
                                                                         Value="False">
                                                                <Setter Property="Content">
                                                                    <Setter.Value>
                                                                        <Label Text="{Binding Content}"
                                                                               TextColor="{StaticResource TextPrimary}"
                                                                               LineBreakMode="WordWrap" />
                                                                    </Setter.Value>
                                                                </Setter>
                                                            </DataTrigger>
                                                            <DataTrigger TargetType="ContentView"
                                                                         Binding="{Binding IsEditing}"
                                                                         Value="True">
                                                                <Setter Property="Content">
                                                                    <Setter.Value>
                                                                        <Entry Text="{Binding Content}"
                                                                               TextColor="{StaticResource TextPrimary}"
                                                                               HorizontalOptions="FillAndExpand" />
                                                                    </Setter.Value>
                                                                </Setter>
                                                            </DataTrigger>
                                                        </ContentView.Triggers>
                                                    </ContentView>
                                                    <Label Text="{Binding Timestamp, StringFormat='{0:HH:mm}'}"
                                                           FontSize="{StaticResource FontSizeCaption}"
                                                           TextColor="{StaticResource TextSecondary}"
                                                           Opacity="0.7"
                                                           HorizontalOptions="Start" />
                                                    <Label Text="{Binding LLMSource, StringFormat='Source: {0}'}"
                                                           FontSize="{StaticResource FontSizeCaption}"
                                                           TextColor="{StaticResource TextSecondary}"
                                                           Opacity="0.7"
                                                           HorizontalOptions="Start"
                                                           IsVisible="{Binding LLMSource, Converter={StaticResource NullToBoolConverter}}" />
                                                    <!-- Edit and Save Buttons -->
                                                    <HorizontalStackLayout HorizontalOptions="End"
                                                                           IsVisible="{Binding IsEditing, Converter={StaticResource InverseBoolConverter}}">
                                                        <Button Text="Edit"
                                                                Command="{Binding Source={RelativeSource AncestorType={x:Type ContentPage}}, Path=BindingContext.EditMessageCommand}"
                                                                CommandParameter="{Binding .}"
                                                                BackgroundColor="{StaticResource Secondary}"
                                                                TextColor="{StaticResource TextOnPrimary}"
                                                                FontSize="{StaticResource FontSizeSmall}" />
                                                    </HorizontalStackLayout>
                                                    <HorizontalStackLayout HorizontalOptions="End"
                                                                           IsVisible="{Binding IsEditing}">
                                                        <Button Text="Save"
                                                                Command="{Binding Source={RelativeSource AncestorType={x:Type ContentPage}}, Path=BindingContext.SaveMessageCommand}"
                                                                CommandParameter="{Binding .}"
                                                                BackgroundColor="{StaticResource Success}"
                                                                TextColor="{StaticResource TextOnPrimary}"
                                                                FontSize="{StaticResource FontSizeSmall}" />
                                                    </HorizontalStackLayout>
                                                </VerticalStackLayout>
                                            </Frame>
                                        </Grid>
                                    </DataTemplate>
                                </CollectionView.ItemTemplate>
                                <CollectionView.EmptyView>
                                    <VerticalStackLayout HorizontalOptions="Center"
                                                         VerticalOptions="Center"
                                                         Spacing="{StaticResource SpacingSmall}">
                                        <Label Text="💬"
                                               FontSize="48"
                                               HorizontalOptions="Center" />
                                        <Label Text="Start a conversation with your AI assistant"
                                               TextColor="{StaticResource TextSecondary}"
                                               HorizontalOptions="Center"
                                               FontSize="{StaticResource FontSizeSmall}" />
                                    </VerticalStackLayout>
                                </CollectionView.EmptyView>
                            </CollectionView>
                        </Frame>
                        <!-- Typing Indicator -->
                        <Frame IsVisible="{Binding IsAiTyping}"
                               BackgroundColor="{AppThemeBinding Light={StaticResource BackgroundPrimary}, Dark={StaticResource Gray600}}"
                               Padding="{StaticResource CardContentPadding}"
                               CornerRadius="8"
                               Margin="0,0,50,0"
                               HorizontalOptions="Start"
                               BorderColor="{AppThemeBinding Light={StaticResource Gray300}, Dark={StaticResource Gray500}}">
                            <StackLayout Orientation="Horizontal"
                                         Spacing="{StaticResource SpacingTiny}">
                                <Label Text="AI Assistant is typing"
                                       TextColor="{StaticResource TextSecondary}"
                                       FontSize="{StaticResource FontSizeSmall}"
                                       VerticalOptions="Center" />
                                <ActivityIndicator IsRunning="True"
                                                   WidthRequest="16"
                                                   HeightRequest="16"
                                                   Color="{StaticResource Primary}" />
                            </StackLayout>
                        </Frame>
                        <!-- Input Section -->
                        <Label Text="Input"
                               FontAttributes="Bold" />
                        <!-- Text Input -->
                        <Grid ColumnDefinitions="*,Auto,Auto"
                              ColumnSpacing="{StaticResource SpacingSmall}">
                            <Entry Grid.Column="0"
                                   Placeholder="Type your message here..."
                                   Text="{Binding CurrentMessage, Mode=TwoWay}"
                                   x:Name="MessageInput"
                                   ReturnType="Send"
                                   ReturnCommand="{Binding SendMessageCommand}" />
                            <Button Grid.Column="1"
                                    Text="Send"
                                    Command="{Binding SendMessageCommand}"
                                    BackgroundColor="{StaticResource Primary}"
                                    TextColor="{StaticResource TextOnPrimary}"
                                    IsEnabled="{Binding CanSendMessage}" />
                            <Button Grid.Column="2"
                                    Text="Clear"
                                    Command="{Binding ClearChatCommand}"
                                    BackgroundColor="{StaticResource Error}"
                                    TextColor="{StaticResource TextOnPrimary}"
                                    FontSize="{StaticResource FontSizeSmall}" />
                        </Grid>
                        <!-- Media Input Options -->
                        <Label Text="Media Input (Optional)"
                               FontAttributes="Bold"
                               FontSize="{StaticResource FontSizeSmall}"
                               Margin="{StaticResource MarginTopSmall}" />
                        <Grid ColumnDefinitions="*,*"
                              RowDefinitions="Auto,Auto"
                              ColumnSpacing="{StaticResource SpacingSmall}"
                              RowSpacing="{StaticResource SpacingSmall}">
                            <!-- First row: Quick upload buttons -->
                            <HorizontalStackLayout Grid.Column="0"
                                                   Grid.ColumnSpan="2"
                                                   Spacing="{StaticResource SpacingSmall}">
                                <Button Text="Upload File"
                                        Command="{Binding SelectFileCommand}"
                                        BackgroundColor="{StaticResource Primary}"
                                        TextColor="{StaticResource TextOnPrimary}"
                                        FontSize="{StaticResource FontSizeSmall}"
                                        WidthRequest="120" />
                                <Button Text="📷 Image"
                                        Command="{Binding SelectImageCommand}"
                                        BackgroundColor="{StaticResource Secondary}"
                                        TextColor="{StaticResource TextOnSecondary}"
                                        FontSize="{StaticResource FontSizeSmall}"
                                        WidthRequest="80"
                                        IsVisible="{Binding SupportsImageInput}" />
                                <Button Text="🎤 Audio"
                                        Command="{Binding SelectAudioCommand}"
                                        BackgroundColor="{StaticResource Tertiary}"
                                        TextColor="{StaticResource TextOnPrimary}"
                                        FontSize="{StaticResource FontSizeSmall}"
                                        WidthRequest="80"
                                        IsVisible="{Binding SupportsAudioInput}" />
                                <Button Text="🗑️ Clear"
                                        Command="{Binding ClearMediaCommand}"
                                        BackgroundColor="{StaticResource Error}"
                                        TextColor="{StaticResource TextOnPrimary}"
                                        FontSize="{StaticResource FontSizeSmall}"
                                        WidthRequest="70"
                                        IsVisible="{Binding HasSelectedMedia}" />
                            </HorizontalStackLayout>
                            <!-- Second row: Drag and drop area -->
                            <Frame Grid.Row="1"
                                   Grid.ColumnSpan="2"
                                   BackgroundColor="{AppThemeBinding Light={StaticResource BackgroundSecondary}, Dark={StaticResource BackgroundDark}}"
                                   BorderColor="{AppThemeBinding Light={StaticResource Gray300}, Dark={StaticResource Gray500}}"
                                   Padding="{StaticResource CardContentPadding}"
                                   CornerRadius="{StaticResource CornerRadiusSmall}"
                                   HeightRequest="60"
                                   x:Name="DropZoneFrame">
                                <Grid>
                                    <Label Text="📁 Drag and drop files here, or use the upload button above"
                                           FontSize="{StaticResource FontSizeSmall}"
                                           TextColor="{StaticResource TextSecondary}"
                                           HorizontalOptions="Center"
                                           VerticalOptions="Center"
                                           IsVisible="{Binding HasSelectedMedia, Converter={StaticResource InverseBoolConverter}}" />
                                    <Label Text="🎯 Files ready for upload - click Send to proceed"
                                           FontSize="{StaticResource FontSizeSmall}"
                                           TextColor="{StaticResource Primary}"
                                           FontAttributes="Bold"
                                           HorizontalOptions="Center"
                                           VerticalOptions="Center"
                                           IsVisible="{Binding HasSelectedMedia}" />
                                    <!-- Gesture recognizer for tap-to-upload -->
                                    <Grid.GestureRecognizers>
                                        <TapGestureRecognizer Command="{Binding SelectFileCommand}" />
                                    </Grid.GestureRecognizers>
                                </Grid>
                            </Frame>
                        </Grid>
                        <!-- Selected Media Display -->
                        <Frame IsVisible="{Binding HasSelectedMedia}"
                               BackgroundColor="{AppThemeBinding Light={StaticResource BackgroundSecondary}, Dark={StaticResource BackgroundDark}}"
                               CornerRadius="{StaticResource CornerRadiusSmall}"
                               Padding="{StaticResource CardContentPadding}"
                               Margin="{StaticResource MarginTopSmall}">
                            <VerticalStackLayout Spacing="{StaticResource SpacingSmall}">
                                <Label Text="Selected Media:"
                                       FontAttributes="Bold"
                                       FontSize="{StaticResource FontSizeSmall}" />
                                <!-- Selected Image -->
                                <Grid IsVisible="{Binding HasSelectedImage}"
                                      ColumnDefinitions="Auto,*,Auto">
                                    <Image Grid.Column="0"
                                           Source="{Binding SelectedImagePath, Converter={StaticResource SafeImageSourceConverter}}"
                                           WidthRequest="60"
                                           HeightRequest="60"
                                           Aspect="AspectFit" />
                                    <VerticalStackLayout Grid.Column="1"
                                                         VerticalOptions="Center"
                                                         Margin="{StaticResource MarginLeftMedium}">
                                        <Label Text="📷 Image attached"
                                               FontSize="{StaticResource FontSizeSmall}" />
                                        <Label Text="{Binding SelectedImageName}"
                                               FontSize="{StaticResource FontSizeCaption}"
                                               TextColor="{StaticResource TextSecondary}" />
                                    </VerticalStackLayout>
                                </Grid>
                                <!-- Selected Audio -->
                                <Grid IsVisible="{Binding HasSelectedAudio}"
                                      ColumnDefinitions="Auto,*">
                                    <Label Grid.Column="0"
                                           Text="🎤"
                                           FontSize="32"
                                           VerticalOptions="Center" />
                                    <VerticalStackLayout Grid.Column="1"
                                                         VerticalOptions="Center"
                                                         Margin="{StaticResource MarginLeftMedium}">
                                        <Label Text="Audio file attached"
                                               FontSize="{StaticResource FontSizeSmall}" />
                                        <Label Text="{Binding SelectedAudioName}"
                                               FontSize="{StaticResource FontSizeCaption}"
                                               TextColor="{StaticResource TextSecondary}" />
                                    </VerticalStackLayout>
                                </Grid>
                            </VerticalStackLayout>
                        </Frame>
                        <!-- Warning if no models active -->
                        <Frame BackgroundColor="{AppThemeBinding Light={StaticResource BackgroundSecondary}, Dark={StaticResource BackgroundDark}}"
                               IsVisible="{Binding ActiveModelsCount, Converter={StaticResource IntToBoolConverter}, ConverterParameter=0}"
                               Padding="{StaticResource CardContentPadding}"
                               CornerRadius="{StaticResource CornerRadiusSmall}"
                               BorderColor="{AppThemeBinding Light={StaticResource Gray300}, Dark={StaticResource Gray500}}">
                            <VerticalStackLayout>
                                <Label Text="💡 Activate a model to start chatting"
                                       FontAttributes="Bold"
                                       TextColor="{AppThemeBinding Light={StaticResource TextSecondary}, Dark={StaticResource TextSecondaryDark}}"
                                       HorizontalOptions="Center" />
                                <Label Text="Choose a model from the Model Management section above"
                                       TextColor="{AppThemeBinding Light={StaticResource TextSecondary}, Dark={StaticResource TextSecondaryDark}}"
                                       FontSize="{StaticResource FontSizeSmall}"
                                       HorizontalOptions="Center" />
                            </VerticalStackLayout>
                        </Frame>
                    </VerticalStackLayout>
                </Frame>
                <!-- Safety & Security -->
                <Frame BorderColor="{StaticResource Primary}"
                       CornerRadius="{StaticResource CornerRadiusLarge}"
                       Padding="{StaticResource CardPadding}">
                    <VerticalStackLayout Spacing="{StaticResource SpacingSmall}">
                        <Label Text="Security Settings"
                               FontSize="{StaticResource FontSizeSubtitle}"
                               FontAttributes="Bold" />
                        <Grid ColumnDefinitions="*,Auto"
                              RowDefinitions="Auto,Auto,Auto"
                              RowSpacing="{StaticResource SpacingMedium}">
                            <Label Text="Require Confirmation Before Actions"
                                   Grid.Row="0"
                                   Grid.Column="0"
                                   VerticalOptions="Center" />
                            <Switch Grid.Row="0"
                                    Grid.Column="1"
                                    IsToggled="True"
                                    OnColor="{StaticResource Primary}" />
                            <Label Text="Limit to Non-Critical Applications"
                                   Grid.Row="1"
                                   Grid.Column="0"
                                   VerticalOptions="Center" />
                            <Switch Grid.Row="1"
                                    Grid.Column="1"
                                    IsToggled="True"
                                    OnColor="{StaticResource Primary}" />
                            <Label Text="Restrict To Current User Session"
                                   Grid.Row="2"
                                   Grid.Column="0"
                                   VerticalOptions="Center" />
                            <Switch Grid.Row="2"
                                    Grid.Column="1"
                                    IsToggled="True"
                                    OnColor="{StaticResource Primary}" />
                        </Grid>
                        <Button Text="Reset Permissions"
                                BackgroundColor="{StaticResource Error}"
                                TextColor="{StaticResource TextOnPrimary}"
                                Margin="{StaticResource MarginTopMedium}" />
                    </VerticalStackLayout>
                </Frame>
            </VerticalStackLayout>
        </ScrollView>
    </ContentPage.Content>
</ContentPage>